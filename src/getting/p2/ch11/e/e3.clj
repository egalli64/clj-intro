;; clj-intro - Introduction to Clojure
;; https://github.com/egalli64/clj-intro
;;
;; For more info read Getting Clojure by Russ Olsen
;; reimplementing iterate

;; it takes a function (inc) and a value (1)
;; cons the passed value (1) to the lazy seq generated by calling:
;;  the recursive function itself with the originally passed function (inc)
;;   and the result of invoking the passed function (inc) on the current value (1 - that gives 2)
;; lazy-seq acts like a point of suspension in the seq generation
;; the execution resumes there for complete the next request
(defn my-iterate [f x]
  (cons x (lazy-seq (my-iterate f (f x)))))

(take 5 (my-iterate inc 1))
(take 5 (iterate inc 1))
